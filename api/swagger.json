{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "0.4.4",
    "title" : "Trackless API",
    "contact" : {
      "name" : "wjtje",
      "url" : "https://www.wjtje.ga"
    },
    "license" : {
      "name" : "The MIT License",
      "url" : "https://wjtje.mit-license.org/"
    }
  },
  "paths" : {
    "/access" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "See where you have access to",
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          },
          "description" : "Option to sort result by propertie"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Access"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Give some group access to a command",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupId" : {
                    "type" : "integer"
                  },
                  "access" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "accessId" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "something wrong with your request"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/access/{accessId}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Display an access rule",
        "parameters" : [ {
          "in" : "path",
          "name" : "accessId",
          "description" : "ID of the access to return",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Access"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "access" ],
        "summary" : "Remove an access rule",
        "parameters" : [ {
          "in" : "path",
          "name" : "accessId",
          "description" : "ID of the access to return",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/access/group/{groupId}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "See where a group has access to",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "description" : "ID of the group to return",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Access"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/api" : {
      "get" : {
        "tags" : [ "api" ],
        "summary" : "Get all your active api keys",
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          },
          "description" : "Option to sort result by propertie"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Api"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/api/{apiId}" : {
      "get" : {
        "tags" : [ "api" ],
        "summary" : "Get infomation about a single api key",
        "parameters" : [ {
          "in" : "path",
          "name" : "apiId",
          "description" : "the id of the api key",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Api"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "There is something wrong with your input"
          },
          "404" : {
            "description" : "The api key was not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "api" ],
        "summary" : "Remove a single api key",
        "parameters" : [ {
          "in" : "path",
          "name" : "apiId",
          "description" : "the id of the api key",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "There is something wrong with your input"
          },
          "404" : {
            "description" : "The api key was not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/group" : {
      "get" : {
        "tags" : [ "group" ],
        "summary" : "Get all the groups on the server",
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          },
          "description" : "Option to sort result by propertie"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "group" ],
        "summary" : "Create a new group on the server",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created the new group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "groupId" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Something is wrong with your input"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/group/{groupId}" : {
      "get" : {
        "tags" : [ "group" ],
        "summary" : "Get infomation about a single group",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "description" : "ID of the group to return",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID"
          },
          "404" : {
            "description" : "Group not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "group" ],
        "summary" : "Removes a single group from the server",
        "description" : "All the user is that group will be moved to group 0 (default). And all access rules for that group will be lost.",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "description" : "ID of the group to remove",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID"
          },
          "404" : {
            "description" : "Group not found"
          },
          "409" : {
            "description" : "Group is in use"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "group" ],
        "summary" : "Edits a group name",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "description" : "ID of the group to edit",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID"
          },
          "404" : {
            "description" : "Group not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/group/{groupId}/add/{userId}" : {
      "post" : {
        "tags" : [ "group" ],
        "summary" : "Add a user to a group",
        "parameters" : [ {
          "in" : "path",
          "name" : "groupId",
          "description" : "ID of the group ",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID"
          },
          "404" : {
            "description" : "Group or user not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/location" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Get all the locations on the server",
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          },
          "description" : "Option to sort result by propertie"
        }, {
          "in" : "query",
          "name" : "hidden",
          "schema" : {
            "type" : "string"
          },
          "description" : "If used the server will show the hidden locations"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "location" ],
        "summary" : "Create a new location",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "place" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new location",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "locationId" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/location/{locationId}" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Get infomation about a single location",
        "parameters" : [ {
          "in" : "path",
          "name" : "locationId",
          "description" : "ID of the location",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "location" ],
        "summary" : "Remove a single location",
        "description" : "All work that was using this location will be using locationId 0 (Deleted location).",
        "parameters" : [ {
          "in" : "path",
          "name" : "locationId",
          "description" : "ID of the location",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Not found"
          },
          "409" : {
            "description" : "Location is in use"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "location" ],
        "summary" : "Edit a location",
        "parameters" : [ {
          "in" : "path",
          "name" : "locationId",
          "description" : "ID of the location",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "place" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/location/user/{userId}/last" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Get the last used location",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/location/user/{userId}/most" : {
      "get" : {
        "tags" : [ "location" ],
        "summary" : "Get the most used location",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "login" ],
        "summary" : "Get a new apikey for the server",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  },
                  "deviceName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "sucessful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "bearer" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "wrong username or password"
          }
        }
      }
    },
    "/server/about" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Get information about the server",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "version" : {
                      "type" : "string",
                      "example" : "0.4-beta.4"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get all the users from the system",
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          },
          "description" : "Option to sort result by propertie"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create a new user on the server",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "firstname" : {
                    "type" : "string"
                  },
                  "lastname" : {
                    "type" : "string"
                  },
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  },
                  "groupId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created the new user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "userId" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Something is wrong with your input"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/user/{userId}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get infomation about a single user",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Something is wrong with your input"
          },
          "404" : {
            "description" : "The user is not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ],
        "description" : "You can use an '~' as a userId to list your own account."
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Remove a single user",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Something is wrong with your input"
          },
          "404" : {
            "description" : "The user is not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ],
        "description" : "You can use an '~' as a userId to list your own account. All the work from that user will be lost."
      },
      "patch" : {
        "tags" : [ "user" ],
        "summary" : "Change a users info",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "firstname" : {
                    "type" : "string"
                  },
                  "lastname" : {
                    "type" : "string"
                  },
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Something is wrong with your input"
          },
          "404" : {
            "description" : "The user is not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ],
        "description" : "You can use an '~' as a userId to list your own account.\nYou don't need to edit every thing at once."
      }
    },
    "/work" : {
      "post" : {
        "tags" : [ "work" ],
        "summary" : "Save your work on the server",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationId" : {
                    "type" : "integer"
                  },
                  "date" : {
                    "type" : "string"
                  },
                  "time" : {
                    "type" : "integer"
                  },
                  "description" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "workId" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "your input values are wrong"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/work/user/{userId}" : {
      "get" : {
        "tags" : [ "work" ],
        "summary" : "Get all the work from a user",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Work"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Check your input"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/work/user/{userId}/date/{start}/{end}" : {
      "get" : {
        "tags" : [ "work" ],
        "summary" : "Get all the work from a user",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "path",
          "name" : "start",
          "description" : "The start date",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "end",
          "description" : "The end date",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Work"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Check your input"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/work/user/{userId}/{workId}" : {
      "get" : {
        "tags" : [ "work" ],
        "summary" : "Get a single work object",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "path",
          "name" : "workId",
          "description" : "Id of the work",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Work"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Check your input"
          },
          "404" : {
            "description" : "User or work not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "work" ],
        "summary" : "Remove a single work object",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "path",
          "name" : "workId",
          "description" : "Id of the work",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Check your input"
          },
          "404" : {
            "description" : "User or work not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "work" ],
        "summary" : "Edit a single work object",
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "path",
          "name" : "workId",
          "description" : "Id of the work",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationId" : {
                    "type" : "integer"
                  },
                  "date" : {
                    "type" : "string"
                  },
                  "time" : {
                    "type" : "integer"
                  },
                  "description" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Check your input"
          },
          "404" : {
            "description" : "User or work not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/worktype" : {
      "get" : {
        "tags" : [ "worktype" ],
        "summary" : "Get all the worktypes from the system",
        "parameters" : [ {
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          },
          "description" : "Option to sort result by propertie"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Worktype"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "worktype" ],
        "summary" : "Create a new worktype on the server",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created the new worktype",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "worktypeId" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Something is wrong with your input"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    },
    "/worktype/{worktypeId}" : {
      "get" : {
        "tags" : [ "worktype" ],
        "summary" : "Get infomation about a single worktype",
        "parameters" : [ {
          "in" : "path",
          "name" : "worktypeId",
          "description" : "ID of the worktype",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Worktype"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Something is wrong with your input"
          },
          "404" : {
            "description" : "The worktype is not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "worktype" ],
        "summary" : "Remove a single worktype",
        "parameters" : [ {
          "in" : "path",
          "name" : "worktypeId",
          "description" : "ID of the worktype",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Something is wrong with your input"
          },
          "404" : {
            "description" : "The worktype is not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "worktype" ],
        "summary" : "Change the info of a worktype",
        "parameters" : [ {
          "in" : "path",
          "name" : "worktypeId",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Something is wrong with your input"
          },
          "404" : {
            "description" : "The worktype is not found"
          }
        },
        "security" : [ {
          "bearer_token" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Access" : {
        "type" : "object",
        "properties" : {
          "accessId" : {
            "type" : "integer"
          },
          "access" : {
            "type" : "string"
          }
        }
      },
      "Api" : {
        "type" : "object",
        "properties" : {
          "apiId" : {
            "type" : "integer"
          },
          "createDate" : {
            "type" : "string"
          },
          "lastUsed" : {
            "type" : "string"
          },
          "deviceName" : {
            "type" : "string"
          }
        }
      },
      "Group" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer"
          },
          "groupName" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "locationId" : {
            "type" : "integer"
          },
          "hidden" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "place" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "Setting" : {
        "type" : "object",
        "properties" : {
          "settingsId" : {
            "type" : "integer"
          },
          "groupId" : {
            "type" : "integer"
          },
          "setting" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "integer"
          },
          "groupName" : {
            "type" : "string"
          }
        }
      },
      "Work" : {
        "type" : "object",
        "properties" : {
          "workId" : {
            "type" : "integer"
          },
          "time" : {
            "type" : "integer"
          },
          "date" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "worktype" : {
            "$ref" : "#/components/schemas/Worktype"
          }
        }
      },
      "Worktype" : {
        "type" : "object",
        "properties" : {
          "worktypeId" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearer_token" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}