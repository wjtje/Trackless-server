openapi: "3.0.0"
servers:
  - url: http://localhost:55565

info:
  version: '0.2.2'
  title: 'Trackless API'
  contact:
    name: wjtje
    url: https://www.wjtje.ga
  license:
    name: Apache 2.0 License
    url: https://www.apache.org/licenses/LICENSE-2.0.html

components:
  schemas:
    responseInfo200:
      type: object
      properties:
        info:
          type: object
          properties:
            status:
              type: integer
              example: 200
              description: The HTTP status code
            message:
              type: string
              example: Success.
              description: A message from the server about your request
    responseInfo201:
      type: object
      properties:
        info:
          type: object
          properties:
            status:
              type: integer
              example: 201
              description: The HTTP status code
            message:
              type: string
              example: Your request has been fulfilled.
              description: A message from the server about your request
    responseInfo400:
      type: object
      properties:
        info:
          type: object
          properties:
            status:
              type: integer
              example: 400
              description: The HTTP status code
            message:
              type: string
              example: There is something wrong with your request.
              description: A message from the server about your request
    responseInfo403:
      type: object
      properties:
        info:
          type: object
          properties:
            status:
              type: integer
              example: 403
              description: The HTTP status code
            message:
              type: string
              example: You don't have access to do this request.
              description: A message from the server about your request
    responseInfo404:
      type: object
      properties:
        info:
          type: object
          properties:
            status:
              type: integer
              example: 404
              description: The HTTP status code
            message:
              type: string
              example: The resource you are looking for is not here.
              description: A message from the server about your request
    responseInfo500:
      type: object
      properties:
        info:
          type: object
          properties:
            status:
              type: integer
              example: 500
              description: The HTTP status code
            message:
              type: string
              example: Something internally went wrong.
              description: A message from the server about your request
    responseApi:
      $ref: "#/components/schemas/responseInfo200"
      type: object
      properties:
        length:
          type: integer
          example: 1
          description: The length of the result
        result:
          type: array
          items:
            type: object
            properties:
              api_id:
                type: integer
                example: 1
                description: The uniqe number of the api key / bearer token
              createDate:
                type: string
                example: 2020-05-19 11:15:50
                description: The date when the api key / bearer token was created
              lastUsed:
                type: string
                example: 2020-05-20 11:46:34
                description: The date when the api key / bearer token was last used
              deviceName:
                type: string
                example: My phone
                description: A name for the api key / bearer token
    
  responses:
    200:
      description: Your request has been fulfilled. But there is not response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseInfo200"         
    201:
      description: Your request has been fulfilled. The resource has been created.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseInfo201"
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseInfo400"
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseInfo403"
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseInfo404"
    500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseInfo500"
              
    
  parameters:
    api_id:
      in: path
      name: api_id
      description: The uniqe number of the api key / bearer token
      example: 3
      schema: 
        type: integer
      required: true
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/{api_id}:
    get:
      tags:
        - api
      description: Get information from a single api key / bearer token.
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/api_id"
      responses:
        200:
          description: An array with the result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseApi"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - api
      description: Remove a single api key / bearer token
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/api_id"
      responses:
        200:
          $ref: "#/components/responses/200"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
  
  /api:
    get:
      tags:
        - api
      description: Get infomation about all your api keys / bearer token
      security:
        - bearerAuth: []
      responses:
        200:
          description: An array with the result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseApi"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
  
  /login:
    post:
      tags:
        - api
      description: Get a new api key / bearer token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: Jdoe
                  description: Your username
                password:
                  type: string
                  example: Str0ng!
                  description: Your password
                deviceName:
                  type: string
                  example: My computer at work
                  description: A name for your api key / bearer token
      responses:
        201:
          description: Your api key / bearer token is created
          content:
            application/json:
              schema:
                allOf:
                 - $ref: "#/components/schemas/responseInfo201"
                 - type: object
                   properties:
                    bearer:
                      type: string
                      description: Your new api key / bearer token
        403:
          description: Bad request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseInfo403"
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          message:
                            type: string
                            example: Please check your username or password.
                            description: A message from the server about your request
        500:
          $ref: "#/components/responses/500"